DROP SCHEMA if exists administracion_de_personal;
CREATE SCHEMA ADMINISTRACION_DE_PERSONAL;
USE ADMINISTRACION_DE_PERSONAL;
CREATE TABLE empleados (
ID_EMPLEADO INT	not null auto_increment,
NOMBRE Varchar(50) default "nombre"	not null,
APELLIDO Varchar(50) default "apellido"	not null,
DNI BIGINT not null,
CUIL BIGINT not null,
GENERO SET("F","M","No binario") not null,
DIRECCION VARCHAR(50) default "nada",
EMAIL VARCHAR(50) not null unique,
SUELDO DOUBLE,
ID_LEVEL INT not null,
ID_SUELDOS INT not null,
ID_AREA INT not null,
ID_CONTRATO INT not null,
ID_ZONA INT not null,
ID_LEADER INT not null,
PRIMARY KEY (ID_EMPLEADO)
) COMMENT "TABLA EMPLEADOS";

CREATE TABLE LEVEL (
ID_LEVEL INT not null,
DESC_LEVEL VARCHAR(50),
primary key (ID_LEVEL)
);

CREATE TABLE SUELDOS (
ID_SUELDOS INT, 
DESC_SUELDOS INT,
PRIMARY KEY	(ID_SUELDOS)
);

CREATE TABLE AREA (
ID_AREA	INT,
DESC_AREA VARCHAR(50),
PRIMARY KEY (ID_AREA)
);	

CREATE TABLE CONTRATO (
ID_CONTRATO	INT,
DESC_CONTRATO VARCHAR(50),
PRIMARY KEY (ID_CONTRATO)
);

CREATE TABLE ZONA (
ID_ZONA	INT,
DESC_ZONA VARCHAR(50), 
PRIMARY KEY (ID_ZONA)
);

CREATE TABLE FICHERO (
ID_FICHERO	INT auto_increment,
id_empleado	INT,
fecha_de_ingreso DATE,	
fecha_de_egreso	DATE,	
PRIMARY KEY (ID_FICHERO)
);

CREATE TABLE ROTACION (
ID_BAJA	INT AUTO_INCREMENT,
ID_EMPLEADO	INT,
FECHA_DE_BAJA	DATE,
FECHA_DE_ALTA	DATE,	
PRIMARY KEY (id_baja)
);

CREATE TABLE PERFORMANCE (
ID_PERF	INT,
PERFORMANCE_DESC VARCHAR(150),
FECHA_PERF DATE,
ID_EMPLOYEE	INT,
PRIMARY KEY (ID_PERF,ID_EMPLOYEE,FECHA_PERF)
);
-- constraint unica 
alter table EMPLEADOS add constraint fk_empleados_level foreign key(id_level) references LEVEL(id_level);
alter table EMPLEADOS add constraint fk_empleados_sueldos foreign key(id_sueldos) references SUELDOS(id_sueldos);
alter table EMPLEADOS add constraint fk_empleados_area foreign key(id_area) references AREA(id_area);
alter table EMPLEADOS add constraint fk_empleados_contrato foreign key(id_contrato) references CONTRATO(id_contrato);
alter table EMPLEADOS add constraint fk_empleados_zona foreign key(id_zona) references ZONA(id_zona);

